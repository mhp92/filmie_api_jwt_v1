# Generated by Django 2.1.5 on 2019-03-23 23:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountsFriendslist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
            ],
            options={
                'db_table': 'accounts_friendslist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountsFriendslistFriends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'accounts_friendslist_friends',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountsProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'accounts_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountUserPreferredGenres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('genre_id', models.IntegerField()),
            ],
            options={
                'db_table': 'account_user_preferred_genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsCardsRoot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.IntegerField()),
                ('sender_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('time_viewed', models.DateTimeField(blank=True, null=True)),
                ('clicked', models.BooleanField(blank=True, null=True)),
                ('clicked_time', models.DateTimeField(blank=True, null=True)),
                ('eventfeed_item_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analytics_cards_root',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsCardsTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'analytics_cards_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Channels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon_path', models.CharField(blank=True, max_length=255, null=True)),
                ('channel_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'channels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChannelStreaming',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('streaming_channel_name', models.CharField(max_length=255)),
                ('link_prefix', models.CharField(max_length=255)),
                ('link_listing', models.CharField(max_length=255)),
                ('api', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'channel_streaming',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChannelUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'channel_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompareLists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_1_id', models.IntegerField()),
                ('user_2_id', models.IntegerField()),
                ('user_1_list_id', models.IntegerField()),
                ('user_2_list_id', models.IntegerField()),
            ],
            options={
                'db_table': 'compare_lists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('reference_key', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('score', models.FloatField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engine_scores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('engine_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('enabled', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engine_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineUserRunlogs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('engine_user_id', models.IntegerField(blank=True, null=True)),
                ('enabled', models.BooleanField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engine_user_runlogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventCardTypes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_card_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventfeedItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eventfeed_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventfeedPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eventfeed_pool',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=256)),
                ('path', models.CharField(max_length=128)),
                ('media', models.CharField(blank=True, max_length=128, null=True)),
                ('relation_table', models.CharField(blank=True, max_length=32, null=True)),
                ('relation_table_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('card_template_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventsShow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'events_show',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FriendRecommendationResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_id', models.IntegerField()),
                ('sender_id', models.IntegerField()),
                ('recipient_id', models.IntegerField()),
                ('message', models.TextField()),
                ('seen', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'friend_recommendation_response',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('friend_id', models.IntegerField()),
                ('accepted', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'friends',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FriendToFriendRecommendations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('friend_id', models.IntegerField()),
                ('movie_id', models.IntegerField()),
                ('comment', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'friend_to_friend_recommendations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenreMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField(blank=True, null=True)),
                ('genre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genre_movie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('tmdb_genre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Imdbkeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imdb_kw_id', models.IntegerField()),
                ('imdb_keyword', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'imdbkeywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpaddressTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ipaddress_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
            ],
            options={
                'db_table': 'keyword_movie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=255)),
                ('tmdb_key_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListPolling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_id', models.IntegerField()),
                ('movie_id', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('vote', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'list_polling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListPollingAnonymousCookies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_polling_id', models.IntegerField()),
                ('cookie', models.CharField(max_length=255)),
                ('ip_address', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'list_polling_anonymous_cookies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListSlug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'list_slug',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogClones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('origin_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'log_clones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogReportTrailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('movie_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'log_report_trailer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogSearchRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('search_request', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'log_search_requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'moods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('channel_id', models.IntegerField()),
                ('show_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'movie_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('event_date', models.DateTimeField()),
                ('movie_event_type_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieEventTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'movie_event_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieImdbKeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filmie_id', models.IntegerField(blank=True, null=True)),
                ('tmdb_movie_id', models.IntegerField(blank=True, null=True)),
                ('imdb_movie_id', models.IntegerField(blank=True, null=True)),
                ('imdb_kw_id', models.IntegerField(blank=True, null=True)),
                ('relevance_yes', models.IntegerField(blank=True, null=True)),
                ('relevance_total', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_imdb_keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieMood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_mood',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieMoodSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered', models.BooleanField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_mood_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieOrderListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_movie_id', models.IntegerField(blank=True, null=True)),
                ('release_movie_id', models.IntegerField(blank=True, null=True)),
                ('occurrence_movie_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_order_listing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoviePerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('person_id', models.IntegerField()),
            ],
            options={
                'db_table': 'movie_person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieRatings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('movie_id', models.IntegerField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_ratings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoviesCast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_role_id', models.IntegerField()),
                ('cast_order', models.IntegerField(blank=True, null=True)),
                ('character', models.CharField(blank=True, max_length=63, null=True)),
            ],
            options={
                'db_table': 'movies_cast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoviesDe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('plot', models.TextField(blank=True, null=True)),
                ('poster_image_path', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movies_de',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField(blank=True, null=True)),
                ('service_id', models.IntegerField(blank=True, null=True)),
                ('show_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieServiceOld',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField(blank=True, null=True)),
                ('service_id', models.IntegerField(blank=True, null=True)),
                ('show_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_service_old',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieServiceUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField(blank=True, null=True)),
                ('service_id', models.IntegerField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_service_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoviesSimilar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('similar_id', models.IntegerField()),
                ('correlation', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movies_similar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('streaming_channel_id', models.IntegerField()),
                ('link', models.CharField(max_length=255)),
                ('language', models.CharField(max_length=255)),
                ('quality', models.IntegerField()),
            ],
            options={
                'db_table': 'movie_stream',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MovieWatchlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('watchlist_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movie_watchlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewMoviesFr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('plot', models.TextField(blank=True, null=True)),
                ('poster_image_path', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('movie_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'new_movies_fr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewMoviesIt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('plot', models.TextField(blank=True, null=True)),
                ('poster_image_path', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('movie_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'new_movies_it',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewMoviesNl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('plot', models.TextField(blank=True, null=True)),
                ('poster_image_path', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('movie_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'new_movies_nl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewMoviesPl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('plot', models.TextField(blank=True, null=True)),
                ('poster_image_path', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('movie_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'new_movies_pl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OldMovieRatings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('movie_id', models.IntegerField()),
                ('rating', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'old_movie_ratings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderRecPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('movie_id', models.IntegerField()),
                ('rec_sender_id', models.IntegerField()),
                ('rec_receiver_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_rec_pool',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_resets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('birthdate', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'people',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalMovieOrderListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'personal_movie_order_listing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'person_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('tmdb_key_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'persons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuicksuggestAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=255)),
                ('startlist_id', models.IntegerField()),
                ('resultlist_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('cookie_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'quicksuggest_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuickSuggestMovies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'quick_suggest_movies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendationEngine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_item', models.IntegerField()),
                ('script', models.CharField(blank=True, max_length=1, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recommendation_engine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendationEngineTriggers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('path', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, null=True)),
                ('trigger', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('enabled', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recommendation_engine_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendationIgnore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('engine_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recommendation_ignore',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendationRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_id', models.IntegerField()),
                ('rating_id', models.IntegerField()),
            ],
            options={
                'db_table': 'recommendation_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendationRequestResponses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('request_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('list_id', models.IntegerField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recommendation_request_responses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendationRequests',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('list_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recommendation_requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recommendations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('movie_id', models.IntegerField()),
                ('ranking', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('engine_id', models.IntegerField(blank=True, null=True)),
                ('score_used', models.BooleanField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recommendations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.CharField(max_length=127)),
                ('relation_table', models.CharField(max_length=31)),
            ],
            options={
                'db_table': 'recommendation_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationAccessCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user_id', models.IntegerField()),
                ('access_code', models.CharField(max_length=255)),
                ('expired', models.BooleanField()),
            ],
            options={
                'db_table': 'registration_access_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceCinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'service_cinema',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type_id', models.IntegerField()),
                ('service_reference_id', models.IntegerField()),
                ('country_id', models.IntegerField()),
                ('icon', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'services',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'service_tv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('shortcut', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'service_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'service_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceVod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'service_vod',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('payload', models.TextField()),
                ('last_activity', models.IntegerField()),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SimilarityRatings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_1_id', models.IntegerField()),
                ('user_2_id', models.IntegerField()),
                ('similar_like', models.IntegerField()),
                ('similar_neutral', models.IntegerField()),
                ('similar_dislike', models.IntegerField()),
                ('size_user_1', models.IntegerField()),
                ('size_user_2', models.IntegerField()),
                ('disimilar_like', models.IntegerField()),
                ('disimilar_dislike', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'similarity_ratings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerAgents',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('browser', models.CharField(max_length=255)),
                ('browser_version', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('name_hash', models.CharField(blank=True, max_length=65, null=True, unique=True)),
            ],
            options={
                'db_table': 'tracker_agents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerConnections',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_connections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerCookies',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_cookies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerDevices',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('kind', models.CharField(max_length=16)),
                ('model', models.CharField(max_length=64)),
                ('platform', models.CharField(max_length=64)),
                ('platform_version', models.CharField(max_length=16)),
                ('is_mobile', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerDomains',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_domains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerErrors',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255)),
                ('message', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_errors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerEvents',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerEventsLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_events_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerGeoip',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('country_code3', models.CharField(blank=True, max_length=3, null=True)),
                ('country_name', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('area_code', models.BigIntegerField(blank=True, null=True)),
                ('dma_code', models.FloatField(blank=True, null=True)),
                ('metro_code', models.FloatField(blank=True, null=True)),
                ('continent_code', models.CharField(blank=True, max_length=2, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_geoip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerLanguages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('preference', models.CharField(max_length=255)),
                ('language_range', models.CharField(db_column='language-range', max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_languages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('method', models.CharField(max_length=10)),
                ('is_ajax', models.BooleanField()),
                ('is_secure', models.BooleanField()),
                ('is_json', models.BooleanField()),
                ('wants_json', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('referer_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tracker_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerPaths',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_paths',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerQueries',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('query', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_queries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerQueryArguments',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('argument', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_query_arguments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerReferers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=255)),
                ('host', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('medium', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('search_terms_hash', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tracker_referers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerReferersSearchTerms',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('search_term', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_referers_search_terms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerRoutePathParameters',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parameter', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_route_path_parameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerRoutePaths',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_route_paths',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerRoutes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('action', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_routes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerSessions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('client_ip', models.CharField(max_length=255)),
                ('is_robot', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerSqlQueries',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sha1', models.CharField(max_length=40)),
                ('statement', models.TextField()),
                ('time', models.FloatField()),
                ('connection_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_sql_queries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerSqlQueriesLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_sql_queries_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerSqlQueryBindings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sha1', models.CharField(max_length=40)),
                ('serialized', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_sql_query_bindings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerSqlQueryBindingsParameters',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_sql_query_bindings_parameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackerSystemClasses',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tracker_system_classes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TriggerPaths',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trigger_path', models.CharField(max_length=255)),
                ('trigger_next_id', models.IntegerField(blank=True, null=True)),
                ('special_check', models.CharField(blank=True, max_length=15, null=True)),
                ('script_to_run', models.CharField(blank=True, max_length=63, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trigger_paths',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TriggerPointerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('trigger_path_id', models.IntegerField(blank=True, null=True)),
                ('completed', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trigger_pointer_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TriggerStartingPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=127, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trigger_starting_points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UploadImgCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('pub_date', models.DateTimeField()),
                ('updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'upload_img_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UploadImgCollectionImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'upload_img_collection_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UploadImgComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=225)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'upload_img_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UploadImgImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=225)),
                ('pub_date', models.DateTimeField()),
                ('col_date', models.DateTimeField()),
                ('image', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'upload_img_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UploadImgImageLikes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'upload_img_image_likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRequestRecommendations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('generated', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_request_recommendations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Watchlists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('type_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_public', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cover', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'watchlists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WatchTogether',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_1_id', models.IntegerField()),
                ('user_2_id', models.IntegerField()),
                ('movie_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'watch_together',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AWS_link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_poster_url', models.CharField(default='https://filmie-storage.s3.eu-central-1.amazonaws.com/movie-posters/w175/', max_length=255)),
                ('medium_poster_url', models.CharField(default='https://filmie-storage.s3.eu-central-1.amazonaws.com/movie-posters/w300/', max_length=255)),
                ('original_poster_url', models.CharField(default='https://filmie-storage.s3.eu-central-1.amazonaws.com/movie-posters/original/', max_length=255)),
                ('list_cover_url', models.CharField(default='https://filmie-storage.s3.eu-central-1.amazonaws.com/list-covers/', max_length=255)),
                ('profile_picture_url', models.CharField(default='https://filmie-storage.s3.eu-central-1.amazonaws.com/profiles/', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Movies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('plot', models.TextField(blank=True, null=True)),
                ('tmdb_id', models.IntegerField(blank=True, null=True)),
                ('imdb_id', models.IntegerField(blank=True, null=True)),
                ('adult', models.BooleanField(blank=True, null=True)),
                ('release_year', models.IntegerField(blank=True, null=True)),
                ('release_month', models.IntegerField(blank=True, null=True)),
                ('release_day', models.IntegerField(blank=True, null=True)),
                ('budget', models.IntegerField(blank=True, null=True)),
                ('revenue', models.BigIntegerField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('poster_image_path', models.CharField(blank=True, max_length=255, null=True)),
                ('original_language', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WatchlistTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('movies', models.ManyToManyField(to='api.Movies')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
